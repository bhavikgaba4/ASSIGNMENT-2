#include <iostream>
using namespace std;
void display(int c[][3]) {
    int nz = c[0][2];
    cout << "Row  Col  Val\n";
    for (int i = 0; i <= nz; i++) {
        cout << c[i][0] << "    " 
             << c[i][1] << "    " 
             << c[i][2] << endl;
    }
}
void transpose(int a[][3]){
    int t [10][3];
    
    int column = a[0][1];
    t[0][0] = a[0][1];
    t[0][1] = a[0][0];
    t[0][2] = a[0][2];
    int nz =a[0][2];
    int k = 1;
    for(int i=0;i<column;i++){
        for(int j = 1;j<=nz;j++){
            if(a[j][1]==i){
                t[k][0] = a[j][1];
                t[k][1] = a[j][0];
                t[k][2] = a[j][2];
            k++;
            }
        }
    }
    t[0][2] = k-1;
 display(t);
}

void add(int a[][3],int b[][3],int c[][3]){
    if(a[0][0]!=b[0][0]||a[0][1]!=b[0][1]){
        cout<<"matrix can't be added";
        return;
    }
    c[0][0] = a[0][0];
    c[0][1] = a[0][1];

    int i = 1;
    int j = 1;
    int k = 1;
    while(i<=a[0][2]&&j<=b[0][2]){
        if(a[i][0]<b[j][0]||(a[i][0]==b[j][0]&&a[i][1]<b[j][1])){
            c[k][0] = a[i][0];
            c[k][1] = a[i][1];
            c[k][2] = a[i][2];
            i++; 
            k++;
        }
        else if(b[j][0]<a[i][0]||(b[j][0]==a[i][0]&&b[j][1]<a[i][1])){
            c[k][0] = b[j][0];
            c[k][1] = b[j][1];
            c[k][2] = b[j][2];
            j++;k++;
        }
        else{
            int sum = a[i][2]+b[j][2];
            if(sum!=0){
                c[k][0] = a[i][0];
                c[k][1] = a[i][1];
                c[k][2] = sum;
                k++;

            }
            i++;
            j++;
        }}
        while(i<=a[0][2]){
              c[k][0] = a[i][0];
        c[k][1] = a[i][1];
        c[k][2] = a[i][2];
        i++; k++;
        }
 while (j <= b[0][2]) {
        c[k][0] = b[j][0];
        c[k][1] = b[j][1];
        c[k][2] = b[j][2];
        j++; k++;
    }
c[0][2] = k-1;
    }

int main() {
    int a[][3] = {{3,3,4},{1,1,5}, {1,3,8}, {2,2,3}, {3,1,6}};
    int b[][3] = {{3,3,3}, {1,2,2}, {2,3,7}, {3,1,4}};
    int t[10][3];
    add(a,b,t);
    display(t);
    transpose(a);
}
